{% extends 'base.jinja2' %}
{% set main_class = 'measure-wide margin-xauto pad-x2' %}
{% block menu %}{% include 'ej_conversations/includes/menu-detail.jinja2' %}{% endblock %}


{% block content %}
    <h1 class="h2 center text-accent">{{ _('Opinion profiles') }}</h1>
    <p class="center">{% trans %}Each point in the plot represents a different opinion.{% endtrans %}</p>
    <p class="text-6 center bold text-brand lowercase margin-b1">{{ _('Select a filter bellow') }}</p>
    <div class="categories" id="scatter-categories">
        <i class="fa fa-chevron-left"></i>
        <span onclick="organizeBy(this, 'gender')">{{ _('Gender') }}</span>
        <span onclick="organizeBy(this, 'race')">{{ _('Race') }}</span>
        <span onclick="organizeBy(this, 'reset')" is-selected>{{ _('All') }}</span>
        <i class="fa fa-chevron-right"></i>
    </div>

    <div id="scatter-container" class="center text-3" style="width: 100%">{{ _('Loading data...') }}</div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/echarts/4.1.0/echarts.min.js" defer></script>
    <script defer>
        var chartDataStore = {descriptions: {}};

        window.addEventListener('load', function () {
            // Load main data from json.
            $.ajax('pca.json').then(function (data) {
                // Prepare container
                var $container = $("#scatter-container"),
                    width = $container.width();
                $container.height(((width < 500) ? width : 500) + 'px');

                // Init chart
                var dom = $container[0],
                    chart = echarts.init(dom);
                dom['chart'] = chart;
                chart.setOption(data.option, true);
                chart.resize();

                // Save data to store
                var store = {},
                    raw = data.option.series[0].data,
                    ids = data.userIds;
                for (var i = 0; i < ids.length; i++) {
                    store[ids[i]] = raw[i];
                }
                chartDataStore.rawData = store;
                chartDataStore.defaultOption = data.option;
                chartDataStore.size = ids.length;
            });
        });

        function organizeBy(elem, opt) {
            // Change selected element
            $('#scatter-categories').find('[is-selected]').attr('is-selected', null);
            $(elem).attr('is-selected', '');

            if (opt === 'reset') {
                $('#scatter-container')[0].chart.setOption(chartDataStore.defaultOption, true);
            } else if (!chartDataStore[opt]) {
                $.ajax('group-' + opt + '.json').then(function (data) {
                    chartDataStore[opt] = data.groups;
                    chartDataStore.descriptions[opt] = data.descriptions;
                    filterByGroup(chartDataStore[opt], chartDataStore.descriptions[opt]);
                })
            } else {
                filterByGroup(chartDataStore[opt], chartDataStore.descriptions[opt]);
            }
        }

        function filterByGroup(groups, descriptions) {
            var seriesMap = {},
                raw = chartDataStore.rawData;


            // Gather data for each serie
            for (var group in groups) {
                var users = groups[group],
                    points = [];

                seriesMap[group] = {
                    'symbolSize': 15,
                    'data': points,
                    'type': 'scatter',
                    'name': descriptions[group]
                };
                for (var i = 0; i < users.length; i++) {
                    points.push(raw[users[i]]);
                }
            }

            // Create options object
            var series = [];
            for (var group in seriesMap) {
                series.push(seriesMap[group]);
            }
            $('#scatter-container')[0].chart.setOption($.extend({},
                chartDataStore.defaultOption, {
                    legend: {type: 'plain'},
                    series: series
                }), true);
        }
    </script>
{% endblock %}
