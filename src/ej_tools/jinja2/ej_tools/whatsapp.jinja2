{% extends 'ej_conversations/base.jinja2' %}

{% block metaOG2 %}

    <meta name="description" property="og:title" content="Area de integração da EJ com outras ferramentas.">
    <meta property="og:description" content="Area de integração da EJ com outras ferramentas.">

{% endblock metaOG2 %}

{% block _menu %} {{ menu(request.user, board_palette) }} {% endblock %}
{% set main_class = "board-container" %}

{% block content %}
<div class="tools">
  <div class="tools-container-full-width">
    <div class="tools-title">
      <h1 class="h2 text-accent"><a href="{{ conversation.url('conversation-tools:index') }}">{{_("Tools")}}</a>
        > <a href="{{ conversation.url('conversation-tools:chatbot') }}">{{ _("Opinion Bots") }}</a>
        > Whatsapp </h1>
      <span class="helptext">{{ _("Collect opinions using EJ's chatbot, also known as Duda. Allows you to collect the opinion of whatsapp users. To make the collection available, forward the participation link to groups, channels or directly in the user's private chat.") }}</span>
    </div>
    <h3 class="h3 divider">{{_("Collect Bot")}}</h3>
    <span class="helptext">{{ _("Share the participation link to start the collection.") }}</span>

    <div class="tools-divider">
      <div class="tools-card-container tools-share-content">

        <span id="tools-icon-share" class="tools-icon-share" style="background: url({{static('/img/icons/share.svg')}}) repeat;" alt="Share icon">
          <span id="tools-tip-text">{{_("Copied to clipboard!")}}</span>
        </span>

        <span id="helptext-tool" class="helptext">
          <h5 class="card-title">{{_("Opinion Bot")}}</h5>
          <p>{{_("Collect your audience's opinion using our guided bot. Click on the share button to send the collection to the whatsapp or other networks.")}}</p>

          <div class="tools-label-buttons">
            <h6 class="card-subtitle">{{_("Collect with:")}}</h6>
            <div id="btn-father" class="tools-buttons">
              {% for channel in tool.options %}
                <button value={{channel[1]}} id="id-{{channel[1]}}" class="grey-button-channel" onclick="ChangeButtonClass(event.target)">{{channel[0]}}</button>
              {% endfor %}
            </div>
          </div>
          <br>
          <div id="share-text">
            {{tool.share}}
            {{conversation.text}}
            <br>
            <div id="instructions-link">
              {{_("To participate just click on the link: ")}}
            </div>
            <a class="tools-link" id="tools-channel">https://api.whatsapp.com/send?phone=BOT_NUMBER&text=start+{{conversation.id}}</a>
          </div>
        </span>

      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
const makeText = function(){
  return "{{tool.share + conversation.text}}"
}

function ChangeButtonClass(e) {
  const father = document.getElementById("btn-father")
  const anchor = document.getElementById('tools-channel')
  
  for (let item of father.children) {
    if (item.classList.contains("pink-button-channel")) {
      anchor.text = anchor.text.replace(item.value, e.value)
      item.classList.remove("pink-button-channel")
      item.classList.add("grey-button-channel")
      break
    }
  }
  
  e.classList.remove('grey-button-channel');
  e.classList.add('pink-button-channel'); 
}  

function initiateButtons(){
  // Set the first button as default selection
  const id = "id-{{tool.options[0][1]}}"
  var btn = document.getElementById(id)
  btn.classList.remove('grey-button-channel');
  btn.classList.add('pink-button-channel');
  initiateLink()
}

function initiateLink(){
  const anchor = document.getElementById('tools-channel')
  anchor.text = anchor.text.replace("BOT_NUMBER", "{{tool.options[0][1]}}")
}

window.onload = function() {
  const btn = document.getElementById('tools-icon-share');
  
  initiateButtons()

  btn.addEventListener('click', async () => {
    const anchor = document.getElementById('tools-channel')
    let shareData = {
        title: "{{conversation.title}}",
        text: makeText(),
        url: anchor.text
    }
    try {
      await navigator.share(shareData)
    } catch (err) {
      await copyText()
    }
  });
};

const copyText = async function() {
  try {
    var range = document.createRange();
    const text = document.getElementById("share-text");
    const tip = document.getElementById("tools-tip-text")
    range.selectNode(text);
    window.getSelection().removeAllRanges(); // clear current selection
    window.getSelection().addRange(range); // to select text
    document.execCommand("copy");
    window.getSelection().removeAllRanges();// to deselect

    tip.classList.add('tools-tip-text-show');  

    await new Promise(r => setTimeout(r, 2000));
    tip.classList.remove('tools-tip-text-show');  
    tip.classList.add('tools-tip-text-hidde');  
  } catch(err){
    alert("Error")
    }
}

</script>

{% endblock %}
