# Generated by Django 2.0.6 on 2018-07-04 12:16

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import ej_trophies.models.trophy


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Trophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(help_text='Trophy unique key defined by human in order to manage static references', max_length=20, unique=True, verbose_name='reference key')),
                ('name', models.CharField(max_length=40, unique=True, verbose_name='name')),
                ('short_description', models.CharField(blank=True, max_length=50, verbose_name='short description')),
                ('full_description', models.TextField(blank=True, verbose_name='full description')),
                ('completion_message', models.TextField(blank=True, default='Congratulations for your achievement! You are awesome!', help_text='Trophy completion message is used to congratulate the user after the achievement of the trophy', max_length=100, verbose_name='completion message')),
                ('icon_not_started', models.ImageField(upload_to=ej_trophies.models.trophy.icon_not_started_path, verbose_name='icon when it is not started')),
                ('icon_in_progress', models.ImageField(upload_to=ej_trophies.models.trophy.icon_in_progress_path, verbose_name='icon when it is progress')),
                ('icon_complete', models.ImageField(upload_to=ej_trophies.models.trophy.icon_complete_path, verbose_name='icon when it is complete')),
                ('score_percent', models.PositiveIntegerField(blank=True, default=0, verbose_name='score defined for each percent of completion')),
                ('score_completed', models.PositiveIntegerField(blank=True, default=0, verbose_name='bonus score defined for a completion')),
                ('complete_on_required_satisfied', models.BooleanField(default=False, help_text='If set as True and the trophy has required trophies associated with, the completeness will be established automatically after all requirementes are satisfied')),
                ('required_trophies', models.ManyToManyField(blank=True, to='ej_trophies.Trophy')),
            ],
        ),
        migrations.CreateModel(
            name='UserTrophy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('percentage', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(100)], verbose_name='current user progress')),
                ('notified', models.BooleanField(default=False, verbose_name='temporary field to track if the user saw the notification or not')),
                ('trophy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ej_trophies.Trophy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='trophy',
            name='users',
            field=models.ManyToManyField(blank=True, through='ej_trophies.UserTrophy', to=settings.AUTH_USER_MODEL),
        ),
    ]
