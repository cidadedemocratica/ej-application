/*
 MIXINS FOR APPLYING COLORS AND STYLES THAT ARE USUALLY APPLIED TOGETHER
 =============================================================================*/

@import '../1_settings/index';

@mixin __color-aux($color, $text, $force) {
    background-color: $color;
    @if ($force) {
        @include force-text-color($text);
    } @else {
        color: $text;
    }
}



/**
 * Mixin that changes the user board, and conversations palette.
 */
@mixin palette {

  &--bluePalette  {
    @include __palette-generator('bluePalette',$color-primary,$color-hint);
  }

  &--greyPalette {
    @include __palette-generator('greyPalette',#666666,#EEEEEE,#052B47);
  }

  &--greenPalette {
    @include __palette-generator('greenPalette', #36C273,#B4FDD4,#052B47);
  }

  &--orangePalette {
    @include __palette-generator('orangePalette',#F5700A,#FFE1CA,#052B47);
  }

  &--purplePalette {
    @include __palette-generator('purplePalette',#7758B3,#E7DBFF,#052B47)
  }

  &--pinkPalette {
    @include __palette-generator('pinkPalette',$color-accent,#FFE3EA,#052B47);
  }

  &--campaignPalette {
    @include __palette-generator('campaignPalette', #1c9dd9,#332f82,#ffffff,#1c9dd9, true, url(/static/img/icons/bg.png));
  }
}

@mixin __palette-generator(
	$selector,
	$dark-color,
	$light-color,
	$h1-detail-banner-color: 'unset',
	$h1-detail-header-color: 'unset',
	$round-borders: false,
	$card-background-image: 'unset') {
    background-color:  $dark-color !important;
    color:  $light-color !important;
		.CommentCard-counter,.CommentCard-user, p, span, text-area {
			font-weight: 600 !important;
			color:  white !important;
		}
		.CommentCard-loginWarn a {
			color: #042049 !important;
		}
    .Button:not(Button[primary]) {
      color:  $dark-color !important;
    }
		@if $round-borders {
			border-radius: unset;
		}
		.ConversationCard-actions--#{$selector} {
			@if $card-background-image != 'none' {
				background: $card-background-image !important;
			}
		}
		&-light.show {
			@if $selector == 'campaignPalette' {
				background-color: $dark-color !important;
				color: $light-color !important;
				input[value="Comment"] {
					color: $dark-color !important;
					background-color: white !important;
				}
			}
		}
    &-light {
			background-color: $light-color !important;
			color: $dark-color !important;
      li > *, li {
        background-color: $light-color !important;
        color: $dark-color !important;
        border-color: $dark-color !important;
      }
			h1 {
				@if $h1-detail-banner-color != 'none' {
					color: $h1-detail-banner-color !important;
				}
			}
			@if $round-borders {
				border-radius: unset !important;
			}
			input[type=submit] {
				background-color: $dark-color !important;
				color: white !important;
			}
			textarea {
				border-color: $dark-color !important;
			}
			#characters-count {
				color: #042049 !important;
			}
    }
    &-text {
      *:not(h1,form) {
        color: $dark-color !important;
      }
      #button-create {
        color: $dark-color;
      }
			h1 {
				@if $h1-detail-header-color != 'none' {
					color: $h1-detail-header-color !important;
				}
			}
    }
    &-arrow {
      border-top: 28px solid $light-color !important;
   }
}

/**
 * Mixin that sets text and background colors. If $force, also sets the
 * text color for child anchor elements.
 */
@mixin color($which, $text: null, $force: false) {
    @if ($text == null) {
        @if ($which == 'primary') {
            @include __color-aux($color-primary, $color-primary-text, $force);
        } @else if ($which == 'accent') {
            @include __color-aux($color-accent, $color-accent-text, $force);
        } @else if ($which == 'hint') {
            @include __color-aux($color-hint, $color-hint-text, $force);
        } @else if ($which == 'emph') {
            @include __color-aux($color-emph, $color-emph-text, $force);
        } @else if ($which == 'content') {
            @include __color-aux($color-content, $color-content-text, $force);
        } @else {
            @error "invalid color mixin";
        }
    } @else {
        @include __color-aux($which, $text, $force);
    }
}

