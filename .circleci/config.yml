# Attention!
# This config is currently outdated
# This config is not in use

# Block definitions
defaults:

  ## Job steps blocks
  steps:

    ### General
    - run: &sync_git_submodules
        name: Syncing Git submodules
        command: git submodule update --init --recursive

    - run: &build_image
        name: Building CI image
        command: docker build -f ./compose/dev/django/Dockerfile -t ej-server:ci .

    - run: &save_image
        name: Saving CI image in build directory
        command: |
          mkdir ~/build
          docker save -o ~/build/ci_image.tar ej-server:ci

    - save_cache: &save_image_cache
        key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
        paths:
          - ~/build

    - restore_cache: &restore_image_cache
        key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}

    - run: &restore_image
        name: Restoring CI image from build directory
        command: docker load < ~/build/ci_image.tar

    - run: &run_postgres
        name: Starting Postgres
        command: docker run -d --env-file=./compose/dev/postgres.env --name=postgres postgres:9.6

    - run: &run_tests
        name: Running tests
        command: docker run --env-file=./compose/dev/django.env --env-file=./compose/dev/postgres.env --link=postgres:postgres ej-server:ci /test.sh

    - run: &sign_in_docker_hub
        name: Signing into Docker Hub
        command: docker login -u ${DOCKER_USER} -p ${DOCKER_PASS}

    ### Development
    - run: &release_dev_image
        name: Pushing development image to Docker Hub
        command: |
          docker tag ej-server:ci "ejplatform/ej-server:develop"
          docker push "ejplatform/ej-server:develop"

    ### Staging/Production
    - run: &build_production_images
        name: Building Production images
        command: |
          docker build -f ./compose/production/Dockerfile --target django -t ej-server:production .
          docker build -f ./compose/production/Dockerfile --target nginx -t ej-server-nginx:production .

    ### Staging
    - run: &release_staging_images
        name: Pushing staging images to Docker Hub
        command: |
          docker tag ej-server:production "ejplatform/ej-server:staging"
          docker push "ejplatform/ej-server:staging"
          docker tag ej-server-nginx:production "ejplatform/ej-server-nginx:staging"
          docker push "ejplatform/ej-server-nginx:staging"

    ### Production
    - run: &release_production_images
        name: Pushing production images to Docker Hub
        command: |
          docker tag ej-server:production "ejplatform/ej-server:latest"
          docker push "ejplatform/ej-server:latest"
          docker tag ej-server-nginx:production "ejplatform/ej-server-nginx:latest"
          docker push "ejplatform/ej-server-nginx:latest"

# CircleCI Config

version: 2.0

jobs:
  build_ci_image:
    machine: true
    steps:
      - checkout
      - run: *sync_git_submodules
      - run: *build_image
      - run: *save_image
      - save_cache: *save_image_cache
  test_ci_image:
    machine: true
    steps:
      - checkout
      - restore_cache: *restore_image_cache
      - run: *restore_image
      - run: *run_postgres
      - run: *run_tests
  release_dev_image:
    machine: true
    steps:
      - checkout
      - restore_cache: *restore_image_cache
      - run: *restore_image
      - run: *sign_in_docker_hub
      - run: *release_dev_image
  release_staging_images:
    machine: true
    steps:
      - checkout
      - run: *sign_in_docker_hub
      - run: *build_production_images
      - run: *release_staging_images
  release_production_images:
    machine: true
    steps:
      - checkout
      - run: *sign_in_docker_hub
      - run: *build_production_images
      - run: *release_production_images

workflows:
  version: 2
  standard:
    jobs:
      - build_ci_image:
          filters:
            tags:
              only:
                - /v.*/
      - test_ci_image:
          filters:
            tags:
              only:
                - /v.*/
          requires:
            - build_ci_image
      - release_dev_image:
          filters:
            branches:
              only:
                - develop
          requires:
            - test_ci_image
      - release_staging_images:
          filters:
            branches:
              only:
                - master
          requires:
            - test_ci_image
      - release_production_images:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^v.*/
          requires:
            - test_ci_image
