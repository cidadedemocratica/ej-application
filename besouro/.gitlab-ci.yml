stages:
  - push base image
  - push deps image
  - push dev image
  - test
  - push image
  - deploy

# Stage: push base image

push base image:
  stage: push base image
  image: docker
  services:
    - docker:dind
  variables:
    IMAGE: besouro/ej-server
    TAG: base
    DOCKERFILE_PATH: besouro/docker/base/Dockerfile
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build --cache-from $IMAGE:$TAG -t $IMAGE:$TAG -f $DOCKERFILE_PATH .
    - docker push $IMAGE:$TAG
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-base-image/
  tags:
    - docker

# Stage: push deps image

push deps image:
  stage: push deps image
  image: docker
  services:
    - docker:dind
  variables:
    IMAGE: besouro/ej-server
    TAG: deps
    DOCKERFILE_PATH: besouro/docker/deps/Dockerfile
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build --cache-from $IMAGE:$TAG -t $IMAGE:$TAG -f $DOCKERFILE_PATH .
    - docker push $IMAGE:$TAG
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-deps-image/
  tags:
    - docker

# Stage: push dev image

push dev image:
  stage: push dev image
  image: docker
  services:
    - docker:dind
  variables:
    IMAGE: besouro/ej-server
    TAG: dev
    DOCKERFILE_PATH: besouro/docker/develop/Dockerfile
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build --cache-from $IMAGE:$TAG -t $IMAGE:$TAG -f $DOCKERFILE_PATH .
    - docker push $IMAGE:$TAG
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-dev-image/
  tags:
    - docker

# Stage: test

test:
  stage: test
  image: besouro/ej-server:dev
  variables:
    POSTGRES_TEST_ENV: besouro/docker/develop/env/postgres.test.env
    EJ_SERVER_TEST_ENV: besouro/docker/develop/env/ej-server.test.env
    IMAGE: besouro/ej-server
    TAG: dev
  script:
    - docker run -d --env-file=$POSTGRES_TEST_ENV --name=postgres postgres:9.6
    - docker run --env-file=$EJ_SERVER_TEST_ENV --env-file=$POSTGRES_TEST_ENV --link=postgres:postgres $IMAGE:$TAG /test.sh

# Stage: push image

push staging image:
  stage: push image
  image: docker
  services:
    - docker:dind
  environment:
    name: staging
    url: http://api.dev.besouro.ejplatform.org/
  variables:
    IMAGE: besouro/app
    TAG: staging
    DOCKERFILE_PATH: docker/production/Dockerfile
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build --cache-from $IMAGE:$TAG -t $IMAGE:$TAG -f $DOCKERFILE_PATH .
    - docker push $IMAGE:$TAG
  only:
    refs:
      - develop
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /skip-push-staging-image/
  tags:
    - docker

push staging tag image:
  stage: push image
  image: docker
  services:
    - docker:dind
  environment:
    name: staging
    url: http://api.dev.besouro.ejplatform.org/
  variables:
    IMAGE: besouro/app
    TAG: staging
    DOCKERFILE_PATH: docker/production/Dockerfile
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build --cache-from $IMAGE:$TAG -t $IMAGE:$TAG-$CI_COMMIT_TAG -f $DOCKERFILE_PATH .
    - docker push $IMAGE:$TAG-$CI_COMMIT_TAG
  only:
    refs:
      - tags
  tags:
    - docker

# Stage: deploy

deploy tag to staging:
  stage: deploy
  image: besouro/cicd:k8s
  environment:
    name: staging
    url: http://api.dev.besouro.ejplatform.org/
  variables:
    DEPLOYMENT: besouro-ej-server
    CONTAINER: ej-server
    IMAGE: besouro/ej-server
    TAG: staging
  script:
    - /deploy.sh $GCLOUD_JSON_KEY $GCLOUD_PROJECT $K8S_CLUSTER $CLUSTER_ZONE $CLUSTER_NAMESPACE $DEPLOYMENT $CONTAINER $IMAGE $TAG-$CI_COMMIT_TAG
  only:
    refs:
      - tags
  tags:
    - docker
