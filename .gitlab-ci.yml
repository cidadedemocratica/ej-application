stages:
    - prepare
    - check_code_style
    - run_tests
    - deploy

variables:
    GITLAB_EJ_TOKEN: "gitlab+deploy-token-533883:51xTbvyHGmEfeZZUxUct"

install_dependencies:
    image: python:3.7
    stage: prepare
    script:
        - apt update && apt install -y bash git curl
    tags:
        - osf

check_style:
    image: python:3.7
    stage: check_code_style
    before_script:
        - pip install black==22.3.0
    script:
        - black --check .

run_tests:
    image: python:3.7
    stage: run_tests
    script:
        - /bin/sh -c 'git clone -b $CI_COMMIT_REF_NAME https://$GITLAB_EJ_TOKEN@gitlab.com/pencillabs/ej/ej-application.git'
        - cd ej-application
        - pip install poetry
        - poetry install --only ci
        - poetry run inv test
    tags:
        - osf

build_dev_images:
    image: docker
    stage: deploy
    script:
        - apt update && apt install -y bash git
        - /bin/sh -c 'git clone -b stable --depth=1 https://$GITLAB_INFRA_TOKEN@gitlab.com/pencillabs/infraestructure/core.git'
        - cd core
        - bin/pencilctl build ej -e dev -b develop -c prod --no-cache --push
    only:
        refs:
            - develop
    tags:
        - osf
