image: docker:18.01.0-ce-git
services:
  - docker:dind
stages:
  - test
  - push image
  - deploy

variables:
  # Docker variables
  ## Develop (Staging)
  DEVELOP_SERVER_DOCKER: ./compose/production/Dockerfile --target django
  DEVELOP_NGINX_DOCKER: ./compose/production/Dockerfile --target nginx
  ## Production
  PRODUCTION_SERVER_DOCKER: $STAGING_SERVER_DOCKER
  PRODUCTION_NGINX_DOCKER: $STAGING_NGINX_DOCKER

  # DockerHub Variables
  DOCKER_HUB_ORGANIZATION: ejplatform
  SERVER_PROJECT: ej-server
  NGINX_PROJECT: ej-nginx
  DOCKER_HUB_EJ_SERVER: $DOCKER_HUB_ORGANIZATION/$SERVER_PROJECT
  DOCKER_HUB_EJ_NGINX: $DOCKER_HUB_ORGANIZATION/$NGINX_PROJECT
  ## Develop (Staging)
  DEVELOP: develop
  DEVELOP_SERVER_IMAGE: $DOCKER_HUB_EJ_SERVER:$DEVELOP
  DEVELOP_NGINX_IMAGE: $DOCKER_HUB_EJ_NGINX:$DEVELOP
  ## Production
  PRODUCTION: latest
  PRODUCTION_SERVER_IMAGE: $DOCKER_HUB_EJ_SERVER:$PRODUCTION
  PRODUCTION_NGINX_IMAGE: $DOCKER_HUB_EJ_NGINX:$PRODUCTION

  # Rancher Variables
  RANCHER_SERVICE_BACKEND: backend
  RANCHER_SERVICE_FLOWER: flower
  RANCHER_SERVICE_WORKER: worker

# Stage: test
test:
  stage: test
  before_script:
    - apk add --no-cache py-pip
    - pip install docker-compose
    - git submodule sync --recursive
    - git submodule update --init --recursive
  script:
    - docker-compose -f ./test.yml run django
  tags:
    - docker

# Stage: push image
push develop image:
  stage: push image
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -f $DEVELOP_SERVER_DOCKER -t $DEVELOP_SERVER_IMAGE .
    - docker build -f $DEVELOP_NGINX_DOCKER -t $DEVELOP_NGINX_IMAGE .
    - docker push $DEVELOP_SERVER_IMAGE
    - docker push $DEVELOP_NGINX_IMAGE
  only:
    - /develop/
  tags:
    - docker

push production images:
  stage: push image
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -f $PRODUCTION_SERVER_DOCKER -t $PRODUCTION_SERVER_IMAGE .
    - docker build -f $PRODUCTION_NGINX_DOCKER -t $PRODUCTION_NGINX_IMAGE .
    - docker push $PRODUCTION_SERVER_IMAGE
    - docker push $PRODUCTION_NGINX_IMAGE
  only:
    - /master/
  tags:
    - docker

push release images:
  stage: push image
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -f $PRODUCTION_SERVER_DOCKER -t $DOCKER_HUB_EJ_SERVER:$CI_COMMIT_TAG .
    - docker build -f $PRODUCTION_NGINX_DOCKER -t $DOCKER_HUB_EJ_NGINX:$CI_COMMIT_TAG .
    - docker push $DOCKER_HUB_EJ_SERVER:$CI_COMMIT_TAG
    - docker push $DOCKER_HUB_EJ_NGINX:$CI_COMMIT_TAG
  only:
    - tags
  tags:
    - docker

# Stage: deploy
deploy to development:
  stage: deploy
  image: cdrx/rancher-gitlab-deploy
  environment: develop
  script:
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_BACKEND --no-finish-upgrade --sidekicks
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_FLOWER --no-finish-upgrade
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_WORKER --no-finish-upgrade
  only:
    - /develop/
  tags:
    - docker

deploy to production:
  stage: deploy
  image: cdrx/rancher-gitlab-deploy
  environment: production
  script:
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_BACKEND --no-finish-upgrade --sidekicks
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_FLOWER --no-finish-upgrade
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service $RANCHER_SERVICE_WORKER --no-finish-upgrade
  only:
    - /master/
  tags:
    - docker
