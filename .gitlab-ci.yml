services:
  - docker:dind

stages:
  - test
  - push
  - deploy

variables:
  DOCKER_DRIVER: overlay2
  GIT_SUBMODULE_STRATEGY: recursive

  DJANGO_MASTER_IMAGE:      "ejplatform/ej-server:master"
  DJANGO_LATEST_IMAGE:      "ejplatform/ej-server:latest"

  BACKEND_MASTER_IMAGE:     "ejplatform/ej-nginx:master"
  BACKEND_LATEST_IMAGE:     "ejplatform/ej-nginx:latest"

  DJANGO_DEVELOP_IMAGE:     "ejplatform/ej-nginx:develop" 
  DJANGO_TEST_ENV:          "./docker/develop/env/django.test.env"
  POSTGRES_TEST_ENV:        "./docker/develop/env/postgres.test.env"

  CPA_DJANGO_MASTER_IMAGE:    "mdhcpa/ej-server:master"
  CPA_BACKEND_MASTER_IMAGE:   "mdhcpa/ej-nginx:master"
  CPA_DJANGO_LATEST_IMAGE:    "mdhcpa/ej-server:latest"
  CPA_BACKEND_LATEST_IMAGE:   "mdhcpa/ej-nginx:latest"


.builder: &builder
  image: docker
  before_script:
    - docker pull $DJANGO_MASTER_IMAGE || true
    - docker build --cache-from $DJANGO_MASTER_IMAGE --build-arg VOLATILE_DEPENDENCIES_STRATEGY=$(date +%s) -t $DJANGO_MASTER_IMAGE -f ./docker/production/django/Dockerfile .
  tags:
    - docker

.buildercpa: &buildercpa
  image: docker
  before_script:
    - docker pull $CPA_DJANGO_MASTER_IMAGE || true
    - docker build --cache-from $CPA_DJANGO_MASTER_IMAGE --build-arg VOLATILE_DEPENDENCIES_STRATEGY=$(date +%s) -t $CPA_DJANGO_MASTER_IMAGE -f ./docker/production/django/Dockerfile .
  tags:
    - docker

#
# Testing
#

test:
  << : *builder
  stage: test
  script:
    - docker build -t $DJANGO_DEVELOP_IMAGE -f ./docker/develop/django/Dockerfile .
    - docker run -d --env-file=$POSTGRES_TEST_ENV --name=postgres postgres:9.6
    - docker run --env-file=$DJANGO_TEST_ENV --env-file=$POSTGRES_TEST_ENV --link=postgres:postgres $DJANGO_DEVELOP_IMAGE /test.sh

#
# Pushing images to registry
#

push:master:nginx:
  << : *builder
  stage: push
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -t $BACKEND_MASTER_IMAGE -f ./docker/production/nginx/master.Dockerfile .
    - docker push $BACKEND_MASTER_IMAGE
  only:
    - master

push:master:django:
  << : *builder
  stage: push
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $DJANGO_MASTER_IMAGE
  only:
    - master

push:latest:nginx:
  << : *builder
  stage: push
  script:
    - docker tag $DJANGO_MASTER_IMAGE $DJANGO_LATEST_IMAGE || true
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -t $BACKEND_LATEST_IMAGE -f ./docker/production/nginx/latest.Dockerfile .
    - docker push $BACKEND_LATEST_IMAGE
  only:
    - tags

push:latest:django:
  << : *builder
  stage: push
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker tag $DJANGO_MASTER_IMAGE $DJANGO_LATEST_IMAGE
    - docker push $DJANGO_LATEST_IMAGE
  only:
    - tags

#
# Push CPA images
#

push:master:nginx:cpa:
  << : *buildercpa
  stage: push
  script:
    - docker tag $CPA_DJANGO_MASTER_IMAGE $DJANGO_MASTER_IMAGE || true
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -t $CPA_BACKEND_MASTER_IMAGE -f ./docker/production/nginx/master.Dockerfile .
    - docker push $CPA_BACKEND_MASTER_IMAGE
  only:
    - master

push:master:django:cpa:
  << : *buildercpa
  stage: push
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker push $CPA_DJANGO_MASTER_IMAGE
  only:
    - master

push:latest:nginx:cpa:
  << : *buildercpa
  stage: push
  script:
    - docker tag $CPA_DJANGO_MASTER_IMAGE $DJANGO_LATEST_IMAGE || true
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker build -t $CPA_BACKEND_LATEST_IMAGE -f ./docker/production/nginx/latest.Dockerfile .
    - docker push $CPA_BACKEND_LATEST_IMAGE
  only:
    - tags

push:latest:django:cpa:
  << : *buildercpa
  stage: push
  script:
    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASS
    - docker tag $CPA_DJANGO_MASTER_IMAGE $CPA_DJANGO_LATEST_IMAGE
    - docker push $CPA_DJANGO_LATEST_IMAGE
  only:
    - tags


#
# Rancher service upgrade
#

.deployer: &deployer
  image: cdrx/rancher-gitlab-deploy
  script:
    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service backend --no-finish-upgrade --sidekicks
# [FIXME] Cancel celery upgrades for just now
#    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service flower --no-finish-upgrade
#    - upgrade --environment $RANCHER_ENVIRONMENT --stack $RANCHER_STACK --service worker --no-finish-upgrade
  tags:
    - docker

deploy:master:generic:
  << : *deployer
  stage: deploy
  environment: develop
  only:
    - master

deploy:latest:generic:
  << : *deployer
  stage: deploy
  environment: production
  only:
    - tags

#
# Rancher server upgrade CPA environment
#

deploy:master:cpa:
  << : *deployer
  stage: deploy
  environment: develop_cpa
  only:
    - master

deploy:latest:cpa:
  << : *deployer
  stage: deploy
  environment: production_cpa
  only:
    - tags
